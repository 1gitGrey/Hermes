{"note":"Don't delete this file! It's used internally to help with page regeneration.","google":"","name":"Hermes","body":"# Hermes\r\n\r\nHermes is an environment for Ruby and JavaScript developers in Darwin using [Tmux](http://tmux.sourceforge.net/), [Vim](http://www.vim.org/) and [iTerm 2](http://www.iterm2.com/) that focuses on speed and ease of use.\r\n\r\nHermes is opinionated where having an opinion is important, but does not prevent you from customizing your tools.\r\n\r\nHermes gives you a lot of things for free:\r\n\r\n- Sensible defaults for developers.\r\n- Integration of Vim into tmux and tmux into iTerm 2.\r\n- Mouse and window integration, allowing selections within tmux panes, not across them.\r\n- Vim packages that provide git integration, command- and block-completion, fuzzy file search and ease of testing.\r\n\r\n## Installation\r\n\r\nAs first step, you should fork the project, as this will make it easier to customize your installation. After you're done, you can run:\r\n\r\n    curl https://raw.github.com/<your username>/Hermes/master/go.bash | bash\r\n\r\nThis will perform the following actions:\r\n\r\n- Check that you have all the needed Homebrew dependencies\r\n- Backup any file or folder that would be overwritten by the installer process\r\n- Install all dotfiles and plugins available in the `hermes` directory and symlink them to the right locations in your home folder\r\n\r\nYou may also want to add Hermes's repository as upstream, so you can pull in the changes done on the main trunk whenever you need.\r\n\r\n## How it's built\r\n\r\nThe purpose of Hermes is to lay down a good structure where you can build upon, without adding extra configuration layers on top. For example, all of Vim's configuration is managed through the `~/.vimrc` file and the `~/.vim` folder, so that you don't have any surprises. The only big difference is that under the hood, those files are actually symlkins to your `hermes` folder.\r\n\r\nTo customise Hermes, it's important to understand how all of its pieces are tied together.\r\n\r\n### Vim\r\n\r\nA stock vim installation with a basic configuration can go a long way and can be really beneficial when it comes to editing files on a server.\r\n\r\nThere is however a very simple problem with the default Vim installation that OsX provides: it cannot access the system clipboard, so if you copy anything from outside the editor, it's not available inside Vim's registers. Worse than that, if you copy anything in Vim (using its internal commands) is not shared with the rest of the system.\r\n\r\nTo sort this out, Hermes installed Homebrew's version of Vim, which can be made available through MacVim.\r\n\r\n    brew install macvim --override-system-vim\r\n\r\nThis has some additional benefits, like having support for Ruby in plugins.\r\n\r\nLet's now go with some defaults for a basic `.vimrc` file:\r\n\r\n    set nocompatible    \"don't need Vi compatibility\r\n    set nobackup        \"don't create backup files\r\n    set nowritebackup\r\n    set notimeout\r\n    set ttimeout\r\n    set ttimeoutlen=10\r\n    set noswapfile      \"don't create swap files\r\n    set history=50      \"keep a small history\r\n    set ruler           \"always show position\r\n    set showcmd\r\n    set incsearch\r\n    set laststatus=2    \"full status bar\r\n    set t_Co=256        \"256 colors - requires a properly configured terminal emulator\r\n    syntax on           \"turn syntax highlight on\r\n\r\n    filetype plugin indent on \"let plugins manage indentation\r\n\r\n    \" Send more characters for redraws\r\n    set ttyfast\r\n    \" Enable mouse use in all modes\r\n    set mouse=a\r\n    set ttymouse=xterm2\r\n\r\n    \" Fix backspace\r\n    set backspace=indent,eol,start\r\n    fixdel\r\n\r\n    \" Softtabs, 2 spaces\r\n    set tabstop=2\r\n    set shiftwidth=2\r\n    set expandtab\r\n\r\n    \" Display extra whitespace at the end of the line\r\n    set list listchars=tab:»·,trail:·\r\n    \" Clipboard fix for OsX\r\n    set clipboard=unnamed\r\n\r\n    \" Numbers\r\n    set number\r\n    set numberwidth=2\r\n\r\n    \"Folding\r\n    set foldmethod=indent\r\n    set foldlevelstart=99\r\n\r\n    \" Autocompletion options\r\n    set wildmode=list:longest,list:full\r\n    set complete=.,w,b\"\r\n\r\nThese settings will let you efficiently edit any file whose type is supported by default, and that already covers javascript and ruby.\r\n","tagline":"An environment for Ruby and JS developers in Darwin"}